{"version":3,"sources":["components/ParstForPage/Input.js","components/ParstForPage/ButtonSubmit.js","components/ParstForPage/ButtonText.js","components/ParstForPage/Heading.js","components/validator/validators.js","components/SignIn/SignIn.js","components/SignUp/schema.js","components/SignUp/SignUp.js","App.js","reportWebVitals.js","index.js"],"names":["Input","forwardRef","props","ref","TextField","variant","margin","inputRef","fullWidth","ButtonSubmit","children","Button","type","ButtonText","disableFocusRipple","disableRipple","style","textTransform","color","Heading","className","Typography","align","fontSize","REGEX_EMAIL","REGEX_PASSWORD","REGULAR_NOT_NUMBER","changeBorder","valueInput","validator","document","querySelector","border","validatorNames","e","target","value","match","length","validatorEmail","console","log","validatorPassword","MESSAGE_FOR_FILL","SignIn","infoUser","JSON","parse","localStorage","getItem","useState","confirmEmail","setConfirmEmail","confirmPassword","setConfirmPassword","schema","yup","shape","email","required","oneOf","password","matches","useForm","mode","resolver","yupResolver","register","handleSubmit","errors","isRemember","watch","present","setPresent","inputRemember","noValidate","onSubmit","data","setItem","stringify","removeItem","id","label","name","onChange","defaultValue","error","helperText","message","FormControlLabel","control","Checkbox","to","firstName","min","lastName","SignUp","history","useHistory","push","App","activeClassName","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6da2ad21.chunk.js","sourcesContent":["import React, { forwardRef } from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nconst Input = forwardRef((props, ref) => {\n    return (\n        <TextField\n            variant='outlined'\n            margin='normal'\n            inputRef={ref}\n            fullWidth\n            \n            {...props}\n        />\n    )\n});\n\nexport default Input;\n\n","import React from 'react';\nimport { Button } from '@material-ui/core';\n\nconst ButtonSubmit = ({ children, props }) => {\n    return (\n        <Button\n            type='submit'\n            fullWidth\n            variant='contained'\n            {...props} >\n            {children}\n        </Button>\n    )\n}\n\nexport default ButtonSubmit;","import React from 'react';\nimport { Button } from '@material-ui/core';\n\nconst ButtonText = ({ children, props }) => {\n    return (\n        <Button\n            disableFocusRipple\n            disableRipple\n            style={{ textTransform: \"none\" }}\n            variant=\"text\"\n            color=\"primary\">\n            {children}\n        </Button>\n    )\n}\n\nexport default ButtonText;\n\n\n\n","import { Button, Typography } from '@material-ui/core';\nimport PersonIcon from '@material-ui/icons/Person';\n\nconst Heading = ({ children, props }) => {\n    return (\n        <div className='form__heading'>\n            <Typography\n                variant='h4'\n                align='center'\n                {...props} >\n                {children}\n            </Typography>\n            <PersonIcon fontSize='large'/>\n\n        </div>\n\n    )\n\n}\n\nexport default Heading;","const REGEX_EMAIL = /^[0-9a-zA-Z]{3,}[@]{1}[a-z]{2,}[.]{1}[a-z]{2,}$/i;\nconst REGEX_PASSWORD = /^(?=.*?[A-Z])(?=.*?[a-z]).{8,}$/;\nconst REGULAR_NOT_NUMBER = /^([^0-9]*)$/;\n\nconst changeBorder = (valueInput, validator) => {\n    const currentBlock = document.querySelector('.MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline')\n    currentBlock.style.border = valueInput ? `1px solid ${validator ? 'green' : 'red'}` : `1px solid rgba(182, 186, 188, 1)`;\n}\nconst validatorNames = (e) => {\n    const valueInput = e.target.value;\n    const validator = (valueInput.match(REGULAR_NOT_NUMBER)\n        && (valueInput.length >= 3)\n        ? true : false);\n    changeBorder(valueInput, validator);\n}\n\nconst validatorEmail = (e) => {\n    const valueInput = e.target.value;\n    console.log(valueInput)\n    const validator = (valueInput.match(REGEX_EMAIL) ? true : false);\n    changeBorder(valueInput, validator);\n}\n\nconst validatorPassword = (e) => {\n    const valueInput = e.target.value;\n    const validator = (valueInput.match(REGEX_PASSWORD) ? true : false);\n    changeBorder(valueInput, validator);\n}\n\nexport { REGULAR_NOT_NUMBER, REGEX_PASSWORD, validatorNames, validatorEmail, validatorPassword }","import { FormControlLabel, Checkbox } from '@material-ui/core';\nimport { useForm } from 'react-hook-form';\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nimport Confetti from 'react-confetti';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\n\nimport Input from '../ParstForPage/Input';\nimport ButtonSubmit from '../ParstForPage/ButtonSubmit';\nimport ButtonText from '../ParstForPage/ButtonText';\nimport Heading from '../ParstForPage/Heading';\nimport {REGEX_PASSWORD, validatorEmail, validatorPassword } from '../validator/validators';\n\nimport '../sign.sass';\nimport './sign-in.sass';\n\nconst MESSAGE_FOR_FILL = 'Fill this field';\n\nfunction SignIn() {\n    \n    const infoUser = JSON.parse(localStorage.getItem('user'));\n    const [confirmEmail, setConfirmEmail] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    \n    const schema = yup.object().shape({\n        email:\n            yup.string()\n                .required(MESSAGE_FOR_FILL)\n                .oneOf([confirmEmail], 'Password or e-mail do not match'),\n        password:\n            yup.string()\n                .required(MESSAGE_FOR_FILL)\n                .matches(REGEX_PASSWORD, 'Bad password')\n                .matches([confirmPassword], 'Password or e-mail do not match')\n\n    });\n    const { register, handleSubmit, errors, watch } = useForm({\n        mode: 'onBlur',\n        resolver: yupResolver(schema)\n    });\n    const isRemember = watch('Remember');\n    const [present, setPresent] = useState(false);\n\n    const inputRemember = JSON.parse(localStorage.getItem('remembered'));\n\n    const onSubmit = (data) => {\n        (isRemember) ?\n            localStorage.setItem('remembered', JSON.stringify({ data }))\n            : localStorage.removeItem('remembered')\n        console.log(data);\n        setPresent(true);\n    }\n    \n      return (\n        <>\n            {present && <Confetti />}\n            <div className='sign'>\n                <Heading>Sign In</Heading>\n                <form noValidate onSubmit={handleSubmit(onSubmit)}>\n                    <Input\n                        ref={register}\n                        id='email'\n                        type='email'\n                        label='E-mail'\n                        name='email'\n                        required\n                        onChange={(e) => { validatorEmail(e); setConfirmEmail(infoUser ? infoUser.data.email : '')}}\n                        defaultValue={inputRemember ? inputRemember.data.email : ''}\n                        error={!!errors.email}\n                        helperText={errors?.email?.message}\n                    />\n                    <Input\n                        ref={register}\n                        id='password'\n                        type='password'\n                        label='Password'\n                        name='password'\n                        onChange={(e) => {validatorPassword(e);  setConfirmPassword(infoUser ? infoUser.data.password : '')}}\n                        defaultValue={inputRemember ? inputRemember.data.password : ''}\n                        error={!!errors.password}\n                        helperText={errors?.password?.message}\n                    />\n                    <FormControlLabel control={\n                        <Checkbox\n                            inputRef={register}\n                            name='Remember'\n                            color=\"primary\"\n                        />\n                    } label=\"Remember me\" />\n                    <ButtonSubmit>Sign In</ButtonSubmit>\n                </form>\n                <div className='btn-text'>\n                    <ButtonText>Forgot password?</ButtonText>\n                    <ButtonText><Link to='/signUp'>Don't have an account? Sign up</Link> </ButtonText>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default SignIn;","import {REGULAR_NOT_NUMBER, REGEX_PASSWORD} from '../validator/validators';\nimport * as yup from 'yup';\n\nconst MESSAGE_FOR_FILL = 'Fill this field';\n\nconst schema = yup.object().shape({\n    firstName:\n        yup.string()\n            .matches(REGULAR_NOT_NUMBER, 'First name should be without numbers')\n            .required(MESSAGE_FOR_FILL)\n            .min(3, \"At least 3 characters\"),\n    lastName:\n        yup.string()\n            .matches(REGULAR_NOT_NUMBER, 'Last name should be without numbers')\n            .required(MESSAGE_FOR_FILL)\n            .min(3, \"At least 3 characters\"),\n    email:\n        yup.string()\n            .required(MESSAGE_FOR_FILL),\n    password:\n        yup.string()\n            .required(MESSAGE_FOR_FILL)\n            .matches(REGEX_PASSWORD, 'Bad password')\n\n});\n\n\nexport default schema;","import { FormControlLabel, Checkbox } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport Input from '../ParstForPage/Input';\nimport { validatorNames, validatorEmail, validatorPassword } from '../validator/validators';\nimport schema from './schema';\nimport ButtonSubmit from '../ParstForPage/ButtonSubmit';\nimport ButtonText from '../ParstForPage/ButtonText';\nimport Heading from '../ParstForPage/Heading';\n\nimport '../sign.sass';\nimport './sign-up.sass';\n\nfunction SignUp() {\n    const history = useHistory()\n    const { register, handleSubmit, errors } = useForm({\n        mode: 'onBlur',\n        resolver: yupResolver(schema)\n    });\n\n    const onSubmit = (data) => {\n        localStorage.setItem('user', JSON.stringify({ data }));\n        history.push('./signIn');\n    }\n\n    return (\n        <div className='sign'>\n            <Heading>Sign Up</Heading>\n            <form noValidate onSubmit={handleSubmit(onSubmit)}>\n                <div className='form__names'>\n                    <Input\n                        ref={register}\n                        id='firstName'\n                        label='First Name'\n                        name='firstName'\n                        required\n                        onChange={e => validatorNames(e)}\n                        error={!!errors.firstName}\n                        helperText={errors?.firstName?.message}\n                    />\n                    <Input\n                        ref={register}\n                        id='lastName'\n                        label='Last Name'\n                        name='lastName'\n                        required\n                        onChange={e => validatorNames(e)}\n                        error={!!errors.lastName}\n                        helperText={errors?.lastName?.message}\n                    />\n                </div>\n                <Input\n                    ref={register}\n                    id='email'\n                    type='email'\n                    label='E-mail'\n                    name='email'\n                    required\n                    onChange={e => validatorEmail(e)}\n                    error={!!errors.email}\n                    helperText={errors?.email?.message}\n                />\n                <Input\n                    ref={register}\n                    id='password'\n                    type='password'\n                    label='Password'\n                    name='password'\n                    onChange={e => validatorPassword(e)}\n                    required\n                    error={!!errors.password}\n                    helperText={errors?.password?.message}\n                />\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            value=\"allowExtraEmails\"\n                            color=\"primary\" />}\n                    label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                />\n                <ButtonSubmit>Sign Up</ButtonSubmit>\n            </form>\n            <div>\n                <ButtonText><Link to='/signIn'>Already have an account? Sign In</Link></ButtonText>\n            </div>\n        </div>\n    )\n}\n\nexport default SignUp;","import { Container } from '@material-ui/core';\n\nimport SignIn from './components/SignIn/SignIn';\nimport SignUp from './components/SignUp/SignUp';\n\nimport { BrowserRouter as Router, Link, Switch, Route, NavLink } from 'react-router-dom';\nimport './components/ParstForPage/image.sass';\nimport './components/ParstForPage/nav.sass';\nfunction App() {\n  return (\n    <>\n      <div className='bg'/>\n      \n      <div className='anketa'>\n        <Router>\n          <div className='nav-pages'>\n            <NavLink to='/signIn' className='nav-link' activeClassName=\"active\">Sign In</NavLink>\n            <NavLink to='/signUp' className='nav-link' activeClassName=\"active\">Sign Up</NavLink>\n          </div>\n\n          <Switch>\n            <Route path='/signIn' component={SignIn} />\n            <Route path='/signUp' component={SignUp} />\n            <Route path={'/'} component={SignUp} />\n          </Switch>\n        </Router>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}