[{"/home/dana/Git/React-Styled-Components/src/index.js":"1","/home/dana/Git/React-Styled-Components/src/App.js":"2","/home/dana/Git/React-Styled-Components/src/reportWebVitals.js":"3","/home/dana/Git/React-Styled-Components/src/components/SignUp/SignUp.js":"4","/home/dana/Git/React-Styled-Components/src/components/SignIn/SignIn.js":"5","/home/dana/Git/React-Styled-Components/src/components/ParstForPage/Input.js":"6","/home/dana/Git/React-Styled-Components/src/components/ParstForPage/Heading.js":"7","/home/dana/Git/React-Styled-Components/src/components/SignUp/schema.js":"8","/home/dana/Git/React-Styled-Components/src/components/ParstForPage/ButtonSubmit.js":"9","/home/dana/Git/React-Styled-Components/src/components/ParstForPage/ButtonText.js":"10","/home/dana/Git/React-Styled-Components/src/components/validator/validators.js":"11"},{"size":500,"mtime":1632765039705,"results":"12","hashOfConfig":"13"},{"size":969,"mtime":1632765039705,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1632765039705,"results":"15","hashOfConfig":"13"},{"size":3376,"mtime":1632765039705,"results":"16","hashOfConfig":"13"},{"size":3946,"mtime":1632765039705,"results":"17","hashOfConfig":"13"},{"size":361,"mtime":1632765039705,"results":"18","hashOfConfig":"13"},{"size":464,"mtime":1632765039705,"results":"19","hashOfConfig":"13"},{"size":820,"mtime":1632765039705,"results":"20","hashOfConfig":"13"},{"size":332,"mtime":1632765039705,"results":"21","hashOfConfig":"13"},{"size":386,"mtime":1632765039705,"results":"22","hashOfConfig":"13"},{"size":1206,"mtime":1632765039705,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"evdu7h",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dana/Git/React-Styled-Components/src/index.js",[],["51","52"],"/home/dana/Git/React-Styled-Components/src/App.js",["53","54"],"import { Container } from '@material-ui/core';\n\nimport SignIn from './components/SignIn/SignIn';\nimport SignUp from './components/SignUp/SignUp';\n\nimport { BrowserRouter as Router, Link, Switch, Route, NavLink } from 'react-router-dom';\nimport './components/ParstForPage/image.sass';\nimport './components/ParstForPage/nav.sass';\nfunction App() {\n  return (\n    <>\n      <div className='bg'/>\n      \n      <div className='anketa'>\n        <Router>\n          <div className='nav-pages'>\n            <NavLink to='/signIn' className='nav-link' activeClassName=\"active\">Sign In</NavLink>\n            <NavLink to='/signUp' className='nav-link' activeClassName=\"active\">Sign Up</NavLink>\n          </div>\n\n          <Switch>\n            <Route path='/signIn' component={SignIn} />\n            <Route path='/signUp' component={SignUp} />\n            <Route path={'/'} component={SignUp} />\n          </Switch>\n        </Router>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","/home/dana/Git/React-Styled-Components/src/reportWebVitals.js",[],"/home/dana/Git/React-Styled-Components/src/components/SignUp/SignUp.js",["55"],"import { FormControlLabel, Checkbox } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport Input from '../ParstForPage/Input';\nimport { validatorNames, validatorEmail, validatorPassword } from '../validator/validators';\nimport schema from './schema';\nimport ButtonSubmit from '../ParstForPage/ButtonSubmit';\nimport ButtonText from '../ParstForPage/ButtonText';\nimport Heading from '../ParstForPage/Heading';\n\nimport '../sign.sass';\nimport './sign-up.sass';\n\nfunction SignUp() {\n    const history = useHistory()\n    const { register, handleSubmit, errors } = useForm({\n        mode: 'onBlur',\n        resolver: yupResolver(schema)\n    });\n\n    const onSubmit = (data) => {\n        localStorage.setItem('user', JSON.stringify({ data }));\n        history.push('./signIn');\n    }\n\n    return (\n        <div className='sign'>\n            <Heading>Sign Up</Heading>\n            <form noValidate onSubmit={handleSubmit(onSubmit)}>\n                <div className='form__names'>\n                    <Input\n                        ref={register}\n                        id='firstName'\n                        label='First Name'\n                        name='firstName'\n                        required\n                        onChange={e => validatorNames(e)}\n                        error={!!errors.firstName}\n                        helperText={errors?.firstName?.message}\n                    />\n                    <Input\n                        ref={register}\n                        id='lastName'\n                        label='Last Name'\n                        name='lastName'\n                        required\n                        onChange={e => validatorNames(e)}\n                        error={!!errors.lastName}\n                        helperText={errors?.lastName?.message}\n                    />\n                </div>\n                <Input\n                    ref={register}\n                    id='email'\n                    type='email'\n                    label='E-mail'\n                    name='email'\n                    required\n                    onChange={e => validatorEmail(e)}\n                    error={!!errors.email}\n                    helperText={errors?.email?.message}\n                />\n                <Input\n                    ref={register}\n                    id='password'\n                    type='password'\n                    label='Password'\n                    name='password'\n                    onChange={e => validatorPassword(e)}\n                    required\n                    error={!!errors.password}\n                    helperText={errors?.password?.message}\n                />\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            value=\"allowExtraEmails\"\n                            color=\"primary\" />}\n                    label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                />\n                <ButtonSubmit>Sign Up</ButtonSubmit>\n            </form>\n            <div>\n                <ButtonText><Link to='/signIn'>Already have an account? Sign In</Link></ButtonText>\n            </div>\n        </div>\n    )\n}\n\nexport default SignUp;","/home/dana/Git/React-Styled-Components/src/components/SignIn/SignIn.js",["56"],"import { FormControlLabel, Checkbox } from '@material-ui/core';\nimport { useForm } from 'react-hook-form';\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nimport Confetti from 'react-confetti';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\n\nimport Input from '../ParstForPage/Input';\nimport ButtonSubmit from '../ParstForPage/ButtonSubmit';\nimport ButtonText from '../ParstForPage/ButtonText';\nimport Heading from '../ParstForPage/Heading';\nimport {REGEX_PASSWORD, validatorEmail, validatorPassword } from '../validator/validators';\n\nimport '../sign.sass';\nimport './sign-in.sass';\n\nconst MESSAGE_FOR_FILL = 'Fill this field';\n\nfunction SignIn() {\n    \n    const infoUser = JSON.parse(localStorage.getItem('user'));\n    const [confirmEmail, setConfirmEmail] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    \n    const schema = yup.object().shape({\n        email:\n            yup.string()\n                .required(MESSAGE_FOR_FILL)\n                .oneOf([confirmEmail], 'Password or e-mail do not match'),\n        password:\n            yup.string()\n                .required(MESSAGE_FOR_FILL)\n                .matches(REGEX_PASSWORD, 'Bad password')\n                .matches([confirmPassword], 'Password or e-mail do not match')\n\n    });\n    const { register, handleSubmit, errors, watch } = useForm({\n        mode: 'onBlur',\n        resolver: yupResolver(schema)\n    });\n    const isRemember = watch('Remember');\n    const [present, setPresent] = useState(false);\n\n    const inputRemember = JSON.parse(localStorage.getItem('remembered'));\n\n    const onSubmit = (data) => {\n        (isRemember) ?\n            localStorage.setItem('remembered', JSON.stringify({ data }))\n            : localStorage.removeItem('remembered')\n        console.log(data);\n        setPresent(true);\n    }\n    \n      return (\n        <>\n            {present && <Confetti />}\n            <div className='sign'>\n                <Heading>Sign In</Heading>\n                <form noValidate onSubmit={handleSubmit(onSubmit)}>\n                    <Input\n                        ref={register}\n                        id='email'\n                        type='email'\n                        label='E-mail'\n                        name='email'\n                        required\n                        onChange={(e) => { validatorEmail(e); setConfirmEmail(infoUser ? infoUser.data.email : '')}}\n                        defaultValue={inputRemember ? inputRemember.data.email : ''}\n                        error={!!errors.email}\n                        helperText={errors?.email?.message}\n                    />\n                    <Input\n                        ref={register}\n                        id='password'\n                        type='password'\n                        label='Password'\n                        name='password'\n                        onChange={(e) => {validatorPassword(e);  setConfirmPassword(infoUser ? infoUser.data.password : '')}}\n                        defaultValue={inputRemember ? inputRemember.data.password : ''}\n                        error={!!errors.password}\n                        helperText={errors?.password?.message}\n                    />\n                    <FormControlLabel control={\n                        <Checkbox\n                            inputRef={register}\n                            name='Remember'\n                            color=\"primary\"\n                        />\n                    } label=\"Remember me\" />\n                    <ButtonSubmit>Sign In</ButtonSubmit>\n                </form>\n                <div className='btn-text'>\n                    <ButtonText>Forgot password?</ButtonText>\n                    <ButtonText><Link to='/signUp'>Don't have an account? Sign up</Link> </ButtonText>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default SignIn;","/home/dana/Git/React-Styled-Components/src/components/ParstForPage/Input.js",[],"/home/dana/Git/React-Styled-Components/src/components/ParstForPage/Heading.js",["57"],"import { Button, Typography } from '@material-ui/core';\nimport PersonIcon from '@material-ui/icons/Person';\n\nconst Heading = ({ children, props }) => {\n    return (\n        <div className='form__heading'>\n            <Typography\n                variant='h4'\n                align='center'\n                {...props} >\n                {children}\n            </Typography>\n            <PersonIcon fontSize='large'/>\n\n        </div>\n\n    )\n\n}\n\nexport default Heading;","/home/dana/Git/React-Styled-Components/src/components/SignUp/schema.js",[],"/home/dana/Git/React-Styled-Components/src/components/ParstForPage/ButtonSubmit.js",[],"/home/dana/Git/React-Styled-Components/src/components/ParstForPage/ButtonText.js",[],"/home/dana/Git/React-Styled-Components/src/components/validator/validators.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":10,"nodeType":"64","messageId":"65","endLine":1,"endColumn":19},{"ruleId":"62","severity":1,"message":"66","line":6,"column":35,"nodeType":"64","messageId":"65","endLine":6,"endColumn":39},{"ruleId":"62","severity":1,"message":"67","line":2,"column":17,"nodeType":"64","messageId":"65","endLine":2,"endColumn":25},{"ruleId":"62","severity":1,"message":"68","line":4,"column":27,"nodeType":"64","messageId":"65","endLine":4,"endColumn":33},{"ruleId":"62","severity":1,"message":"69","line":1,"column":10,"nodeType":"64","messageId":"65","endLine":1,"endColumn":16},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useState' is defined but never used.","'Router' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]